{"version":3,"file":"component---src-pages-lectures-tsx-5b87f3ab0df4a0f0eb53.js","mappings":"gIAmBA,IAhBmBA,IAAAA,IAAC,GAACC,EAAE,SAAEC,GAAqD,SAC1EC,EAAAA,cAAAA,SAAAA,CACIC,UAAY,6dAMZD,EAAAA,cAACE,EAAAA,KAAI,CAACJ,GAAIA,GACNE,EAAAA,cAAAA,OAAAA,CACIC,UAAU,wFACTF,IAGJ,C,+HCTb,MAAMI,EAAcN,IAOd,IAPe,KAACO,EAAI,MAAEC,EAAK,SAAEC,EAAQ,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAOnE,EACG,OACIT,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,0DACVG,GAAQJ,EAAAA,cAACU,EAAAA,GAAI,CAACT,UAAU,iDAAiDG,GAC1EJ,EAAAA,cAACW,EAAAA,GAAE,CAACV,UAAU,wBACTI,EAAM,IAAEC,GAAa,KAAIA,MAE9BN,EAAAA,cAACY,EAAAA,EAAC,KAAEL,GAEAC,GACAR,EAAAA,cAACa,EAAAA,EAAU,CAACf,GAAIW,GAAU,aAEtB,gBAACK,EAAAA,IAAY,CAACb,UAAU,kBAG9B,EAIRc,EAAY,CAAC,SAAU,SAAU,OAAQ,SAAU,cAkD5CC,EAAOA,IAChBhB,EAAAA,cAACiB,EAAAA,EAAG,CAACZ,MAAM,aAsCf,UAvFiBa,IAAiD,IAAhD,KAACC,GAA0C,EACzD,MAAM,SAACC,GAAYD,EACbE,EAAQC,MAAMC,KAChB,IAAIC,IAAIJ,EAASK,MAAMC,KAAIC,IAAI,aAAoB,QAAhB,EAAAA,EAAKC,mBAAW,aAAhBC,EAAkBC,OAAQ,CAAC,MAChEC,MAAK,CAACC,EAAGC,IAAMA,EAAID,IAErB,OACIhC,EAAAA,cAACkC,EAAAA,EAAM,CAACC,WAAW,YAEXd,EAAMK,KAAII,GACN9B,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAACoC,EAAAA,GAAE,CAACnC,UAAU,yBAAyB6B,GAEnCf,EAAUW,KAAIW,GACVjB,EAASK,MAAMa,QACXX,IAAI,eAAoB,QAAhB,EAAAA,EAAKC,mBAAW,aAAhBW,EAAkBT,QAASA,IAAwB,QAAhB,EAAAH,EAAKC,mBAAW,aAAhBY,EAAkBH,YAAaA,CAAQ,IACpFI,OAAS,GACXzC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACXD,EAAAA,cAAC0C,EAAAA,GAAE,CAACzC,UAAU,8CAA8CoC,GAC5DrC,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,aAENmB,EAASK,MAAMa,QACXX,IAAI,eAAoB,QAAhB,EAAAA,EAAKC,mBAAW,aAAhBe,EAAkBb,QAASA,IAAwB,QAAhB,EAAAH,EAAKC,mBAAW,aAAhBgB,EAAkBP,YAAaA,CAAQ,IACpFX,KAAIC,IAAI,yBACN3B,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAACG,EAAW,CACRE,OAAuB,QAAhB,EAAAsB,EAAKC,mBAAW,aAAhBiB,EAAkBxC,QAAS,GAClCD,MAAsB,QAAhB,EAAAuB,EAAKC,mBAAW,aAAhBkB,EAAkB1C,OAAQ,GAChCE,UAA0B,QAAhB,EAAAqB,EAAKC,mBAAW,aAAhBmB,EAAkBzC,WAAY,GACxCC,aAA6B,QAAhB,EAAAoB,EAAKC,mBAAW,aAAhBoB,EAAkBzC,cAAe,GAC9CE,UAAqB,QAAX,EAAAkB,EAAKsB,cAAM,aAAXC,EAAazC,WAAY,GACnCD,WAAsB,QAAX,EAAAmB,EAAKsB,cAAM,OAAY,QAAZ,EAAXE,EAAaC,kBAAU,WAAZ,EAAXC,EAAyBC,QAAS,GAAK,IAErD,WAUpC,C","sources":["webpack://p4c-lab/./src/components/link-button.tsx","webpack://p4c-lab/./src/pages/lectures.tsx"],"sourcesContent":["import {Link} from \"gatsby\";\r\nimport * as React from \"react\";\r\n\r\nconst LinkButton = ({to, children}: { to: string, children?: React.ReactNode }) =>\r\n    <button\r\n        className={`group flex items-center justify-center\r\n                    p-0.5 text-center font-medium relative focus:z-10 focus:outline-none text-gray-900 bg-white border \r\n                    border-gray-200 enabled:hover:bg-gray-100\r\n                    enabled:hover:text-cyan-700 :ring-cyan-700 focus:text-cyan-700 dark:bg-transparent \r\n                    dark:text-gray-400 dark:border-gray-600 dark:enabled:hover:text-white dark:enabled:hover:bg-gray-700 rounded-lg focus:ring-2`\r\n        }>\r\n        <Link to={to}>\r\n            <span\r\n                className='flex items-center transition-all duration-200 rounded-md text-sm px-4 py-2 font-sans'>\r\n                {children}\r\n            </span>\r\n        </Link>\r\n    </button>\r\n\r\nexport default LinkButton\r\n","import React from 'react'\r\nimport {graphql, PageProps} from \"gatsby\";\r\nimport Seo from \"../components/seo\";\r\nimport Layout from \"../components/layout\";\r\nimport {H3, H6, Span, P, H4} from \"../components/typography\";\r\nimport {FaArrowRight} from \"react-icons/fa6\";\r\nimport LinkButton from \"../components/link-button\";\r\n\r\nconst LectureItem = ({code, title, division, description, showMore, sitePath}: {\r\n    code?: string | number,\r\n    title?: string,\r\n    division?: string | number,\r\n    description?: string | null,\r\n    showMore?: boolean | null\r\n    sitePath: string\r\n}) => {\r\n    return (\r\n        <div className=\"flex flex-col text-sm items-start font-serif space-y-1\">\r\n            {code && <Span className='leading-none text-gray-400 dark:text-gray-500'>{code}</Span> }\r\n            <H6 className='capitalize font-sans'>\r\n                {title} {division && ` (${division})`}\r\n            </H6>\r\n            <P>{description}</P>\r\n            {\r\n                showMore &&\r\n                <LinkButton to={sitePath}>\r\n                    Learn More\r\n                    <FaArrowRight className='ml-2 h-3 w-3'/>\r\n                </LinkButton>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SEMESTERS = ['spring', 'summer', 'fall', 'winter', 'precollege']\r\n\r\nconst Lectures = ({data}: PageProps<Queries.LecturePageQuery>) => {\r\n    const {lectures} = data\r\n    const years = Array.from(\r\n        new Set(lectures.nodes.map(node => node.frontmatter?.year || 0))\r\n    ).sort((a, b) => b - a)\r\n\r\n    return (\r\n        <Layout activeLink='lectures'>\r\n            {\r\n                years.map(year =>\r\n                    <div>\r\n                        <H3 className='dark:text-primary-100'>{year}</H3>\r\n                        {\r\n                            SEMESTERS.map(semester =>\r\n                                lectures.nodes.filter(\r\n                                    node => node.frontmatter?.year === year && node.frontmatter?.semester === semester\r\n                                ).length > 0 &&\r\n                                <div className='flex flex-col'>\r\n                                    <H4 className='dark:text-primary-100 capitalize pt-2 pb-4'>{semester}</H4>\r\n                                    <ul className='space-y-8'>\r\n                                        {\r\n                                            lectures.nodes.filter(\r\n                                                node => node.frontmatter?.year === year && node.frontmatter?.semester === semester\r\n                                            ).map(node =>\r\n                                                <li>\r\n                                                    <LectureItem\r\n                                                        title={node.frontmatter?.title || ''}\r\n                                                        code={node.frontmatter?.code || ''}\r\n                                                        division={node.frontmatter?.division || ''}\r\n                                                        description={node.frontmatter?.description || ''}\r\n                                                        sitePath={node.fields?.sitePath || ''}\r\n                                                        showMore={(node.fields?.timeToRead?.words || 0) > 0}\r\n                                                    />\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </Layout>\r\n)\r\n\r\n}\r\n\r\nexport const Head = () =>\r\n    <Seo title='Lectures'/>\r\n\r\nexport const pageQuery = graphql`\r\n    query LecturePage {\r\n        lectures: allMdx(\r\n            filter: {\r\n                fields: {\r\n                    postType: {\r\n                        eq: \"lectures\"\r\n                    }\r\n                }\r\n            }\r\n            sort: {\r\n                frontmatter: {\r\n                    year: DESC\r\n                }\r\n            }\r\n        ) {\r\n            nodes {\r\n                fields {\r\n                    sitePath\r\n                    timeToRead {\r\n                        words\r\n                    }\r\n                }\r\n                frontmatter {\r\n                    code\r\n                    title\r\n                    year\r\n                    semester\r\n                    division\r\n                    description\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default Lectures"],"names":["_ref","to","children","React","className","Link","LectureItem","code","title","division","description","showMore","sitePath","Span","H6","P","LinkButton","FaArrowRight","SEMESTERS","Head","Seo","_ref2","data","lectures","years","Array","from","Set","nodes","map","node","frontmatter","_node$frontmatter","year","sort","a","b","Layout","activeLink","H3","semester","filter","_node$frontmatter2","_node$frontmatter3","length","H4","_node$frontmatter4","_node$frontmatter5","_node$frontmatter6","_node$frontmatter7","_node$frontmatter8","_node$frontmatter9","fields","_node$fields","_node$fields2","timeToRead","_node$fields2$timeToR","words"],"sourceRoot":""}