{"version":3,"file":"component---src-components-publications-template-tsx-content-file-path-posts-publications-interrupting-drivers-for-interactions-predicting-opportune-moments-for-in-vehicle-proactive-auditory-verbal-tasks-md-9afec293784a82951859.js","mappings":"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","sources":["webpack://p4c-lab/./posts/publications/Interrupting Drivers for Interactions Predicting Opportune Moments for In-vehicle Proactive Auditory-verbal Tasks.md","webpack://p4c-lab/./src/components/publications-template.tsx","webpack://p4c-lab/./src/components/mdx-template.tsx","webpack://p4c-lab/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"abstract\"\n  }, React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#abstract\"\n  }, React.createElement(_components.span, {\n    className: \"icon icon-link\"\n  })), \"Abstract\"), \"\\n\", React.createElement(_components.p, null, \"Auditory-verbal interactions with in-vehicle information systems have become increasingly popular for improving driver safety because they obviate the need for distractive visual-manual operations. This opens up new possibilities for enabling proactive auditory-verbal services where intelligent agents proactively provide contextualized recommendations and interactive decision-making. However, prior studies have warned that such interactions may consume considerable attentional resources, thus negatively affecting driving performance. This work aims to develop a machine learning model that can find opportune moments for the driver to engage in proactive auditory-verbal tasks by using the vehicle and environment sensor data. Given that there is a lack of definition about what constitutes interruptibility for auditory-verbal tasks, we first define interruptible moments by considering multiple dimensions and then iteratively develop the experimental framework through an extensive literature review and four pilot studies. We integrate our framework into OsmAnd, an open-source navigation service, and perform a real-road field study with 29 drivers to collect sensor data and user responses. Our machine learning analysis shows that opportune moments for interruption can be conservatively inferred with an accuracy of 0.74. We discuss how our experimental framework and machine learning models can be used to design intelligent auditory-verbal services in practical deployment contexts.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"links\"\n  }, React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#links\"\n  }, React.createElement(_components.span, {\n    className: \"icon icon-link\"\n  })), \"Links\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://drive.google.com/uc?export=download&id=1Cwelq87aMg52bRCQY2EkVq4lvCh6FiUo\",\n    target: \"_blank\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"Paper\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/Projects/p4clab.github.io/posts/publications/Interrupting Drivers for Interactions Predicting Opportune Moments for In-vehicle Proactive Auditory-verbal Tasks.md\";\nimport React from 'react';\nimport Layout from \"./layout\";\nimport Seo from \"./seo\";\nimport {A, H4, Span} from \"./typography\";\nimport MdxTemplate from \"./mdx-template\";\nconst PublicationTemplate = _ref => {\n  let {data, children} = _ref;\n  const {publication} = data;\n  const {title, date, type, authors, publisher, abbrev, volume, issue, pages, doi} = (publication === null || publication === void 0 ? void 0 : publication.frontmatter) || ({});\n  const pubAbbrev = publisher && abbrev ? `${publisher} (${abbrev})` : publisher;\n  const volIssue = volume && issue ? `${volume} (${issue})` : volume;\n  const pubLine = [pubAbbrev, volIssue, pages].filter(p => p !== undefined && p !== null).join(', ');\n  return React.createElement(Layout, {\n    activeLink: \"publications\"\n  }, React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"flex flex-col items-start space-y-2 text-base font-serif\"\n  }, React.createElement(Span, {\n    className: \"leading-none text-gray-400 dark:text-gray-500\"\n  }, date || ''), React.createElement(H4, {\n    className: \"capitalize font-sans\"\n  }, \"[\", type, \"] \", title), authors && React.createElement(Span, {\n    className: \"leading-1\"\n  }, authors.join(', '), \" \"), publisher && React.createElement(Span, {\n    className: \"italic\"\n  }, pubLine), doi && React.createElement(A, {\n    href: `https://doi.org/${doi}`\n  }, \"DOI: \", doi)), React.createElement(\"hr\", {\n    className: \"my-6\"\n  }), React.createElement(MdxTemplate, null, children)));\n};\nconst pageQuery = \"433653831\";\nexport const Head = _ref2 => {\n  var _data$publication, _data$publication$fro;\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: `Publication - ${(_data$publication = data.publication) === null || _data$publication === void 0 ? void 0 : (_data$publication$fro = _data$publication.frontmatter) === null || _data$publication$fro === void 0 ? void 0 : _data$publication$fro.title}`\n  });\n};\nPublicationTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PublicationTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react'\r\nimport {MDXProvider} from \"@mdx-js/react\";\r\nimport {A, H4, H5, H6, P} from \"./typography\";\r\n\r\nconst MdxTemplate = ({children} : {children: React.ReactNode})  => {\r\n    const component = {\r\n        h1: (props: object) => <H4 className='mt-12 mb-1 first:mt-0' {...props}/>,\r\n        h2: (props: object) => <H5 className='mt-4 mb-1' {...props}/>,\r\n        h3: (props: object) => <H6 className='mt-2 mb-1' {...props}/>,\r\n        p: (props: object) => <P className='mt-0 mb-2' {...props}/>,\r\n        ul: (props: object) => <ul className='my-0 list-outside list-disc text-md text-gray-500 font-serif dark:text-gray-400' {...props}/>,\r\n        ol: (props: object) => <ol className='my-0 list-outside list-decimal text-md text-gray-500 font-serif dark:text-gray-400' {...props}/>,\r\n        li: (props: object) => <li className='my-0' {...props}/>,\r\n        a: (props: object) => <A {...props}/>,\r\n        pre: (props: object) => <pre className='p-0' {...props}/>,\r\n        table: (props: object) => <table className='font-medium text-md font-serif' {...props}/>\r\n    }\r\n\r\n    return (\r\n        <article className='max-w-full dark:format-invert format'>\r\n            <MDXProvider components={component}>{children}</MDXProvider>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default MdxTemplate","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","span","p","ul","li","_provideComponents","components","React","id","tabIndex","href","className","target","rel","wrapper","MDXLayout","PublicationTemplate","_ref","data","children","publication","title","date","type","authors","publisher","abbrev","volume","issue","pages","doi","frontmatter","pubLine","filter","join","Layout","activeLink","Span","H4","A","MdxTemplate","Head","_ref2","_data$publication","_data$publication$fro","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","component","h2","H5","h3","H6","P","ol","pre","table","MDXProvider","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}