{"version":3,"file":"component---src-components-notice-template-tsx-content-file-path-posts-notice-mdx-6b8fbf7085b74a2c099c.js","mappings":"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","sources":["webpack://p4c-lab/./posts/notice.mdx","webpack://p4c-lab/./src/components/notice-template.tsx","webpack://p4c-lab/./src/components/mdx-template.tsx","webpack://p4c-lab/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"P4C 연구실에서 일상 생활의 불편을 컴퓨팅 기술로 해결하고자 하는 학생 연구원 및 대학원생을 모집합니다.\\r\\n주 연구 분야는 \", React.createElement(_components.strong, null, \"모바일/디지털 헬스\"), \", \", React.createElement(_components.strong, null, \"센서 데이터 사이언스\"), \", \", React.createElement(_components.strong, null, \"인간-컴퓨터 상호작용\"), \"으로, 모바일 데이터를 분석해서 일상 생활의 불편을 해소하는 데 적용할 수 있는 어떠한 연구 주제라도 좋습니다.\\r\\n또한, 현재 진행중인 연구는 다음과 같습니다:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"강화 학습 기반의 개인 맞춤형 건강 증진 방법 추천\"), \"\\n\", React.createElement(_components.li, null, \"멀티 모달 센서 데이터의 직관적인 시각화\"), \"\\n\", React.createElement(_components.li, null, \"인공 지능 모델의 설명 여부와 개인화 정도의 탐색\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"보다 세부적인 연구 내용 또는 문의 사항이 있으면 컴퓨터공학과 최우혁 교수 (\", React.createElement(_components.a, {\n    href: \"mailto:woohyeok.choi@kangwon.ac.kr\"\n  }, \"woohyeok.choi@kangwon.ac.kr\"), \")로 연락주세요 \", \"😄\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/Projects/p4clab.github.io/posts/notice.mdx\";\nimport React from \"react\";\nimport Seo from \"./seo\";\nimport Layout from \"./layout\";\nimport {H2, H4} from \"./typography\";\nimport MdxTemplate from \"./mdx-template\";\nconst NoticeTemplate = _ref => {\n  var _notice$frontmatter;\n  let {data, children} = _ref;\n  const {notice} = data;\n  return React.createElement(Layout, null, React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"flex flex-col space-y-2 text-base font-serif mb-6\"\n  }, React.createElement(H2, {\n    className: \"font-sans\"\n  }, \"Notice\"), React.createElement(H4, {\n    className: \"font-sans\"\n  }, notice === null || notice === void 0 ? void 0 : (_notice$frontmatter = notice.frontmatter) === null || _notice$frontmatter === void 0 ? void 0 : _notice$frontmatter.title)), React.createElement(MdxTemplate, null, children)));\n};\nconst pageQuery = \"484208841\";\nexport const Head = _ref2 => {\n  var _data$notice, _data$notice$frontmat;\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: `Notice - ${(_data$notice = data.notice) === null || _data$notice === void 0 ? void 0 : (_data$notice$frontmat = _data$notice.frontmatter) === null || _data$notice$frontmat === void 0 ? void 0 : _data$notice$frontmat.title}`\n  });\n};\nNoticeTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(NoticeTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react'\r\nimport {MDXProvider} from \"@mdx-js/react\";\r\nimport {A, H4, H5, H6, P} from \"./typography\";\r\n\r\nconst MdxTemplate = ({children} : {children: React.ReactNode})  => {\r\n    const component = {\r\n        h1: (props: object) => <H4 className='mt-12 mb-1 first:mt-0' {...props}/>,\r\n        h2: (props: object) => <H5 className='mt-4 mb-1' {...props}/>,\r\n        h3: (props: object) => <H6 className='mt-2 mb-1' {...props}/>,\r\n        p: (props: object) => <P className='mt-0 mb-2' {...props}/>,\r\n        ul: (props: object) => <ul className='my-0 list-outside list-disc text-md text-gray-500 font-serif dark:text-gray-400' {...props}/>,\r\n        ol: (props: object) => <ol className='my-0 list-outside list-decimal text-md text-gray-500 font-serif dark:text-gray-400' {...props}/>,\r\n        li: (props: object) => <li className='my-0' {...props}/>,\r\n        a: (props: object) => <A {...props}/>,\r\n        pre: (props: object) => <pre className='p-0' {...props}/>,\r\n        table: (props: object) => <table className='font-medium text-md font-serif' {...props}/>\r\n    }\r\n\r\n    return (\r\n        <article className='max-w-full dark:format-invert format'>\r\n            <MDXProvider components={component}>{children}</MDXProvider>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default MdxTemplate","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","ul","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","NoticeTemplate","_ref","_notice$frontmatter","data","children","notice","Layout","className","H2","H4","frontmatter","title","MdxTemplate","Head","_ref2","_data$notice","_data$notice$frontmat","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","component","h1","h2","H5","h3","H6","P","ol","A","pre","table","MDXProvider","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}