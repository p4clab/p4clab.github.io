{"version":3,"file":"component---src-components-publications-template-tsx-content-file-path-posts-publications-k-emo-phone-a-mobile-and-wearable-dataset-with-in-situ-emotion-stress-and-attention-labels-md-ac6ce79ae852957e002f.js","mappings":"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","sources":["webpack://p4c-lab/./posts/publications/K-EmoPhone A Mobile and Wearable Dataset with In-Situ Emotion, Stress, and Attention Labels.md","webpack://p4c-lab/./src/components/publications-template.tsx","webpack://p4c-lab/./src/components/mdx-template.tsx","webpack://p4c-lab/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"abstract\"\n  }, React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#abstract\"\n  }, React.createElement(_components.span, {\n    className: \"icon icon-link\"\n  })), \"Abstract\"), \"\\n\", React.createElement(_components.p, null, \"With the popularization of low-cost mobile and wearable sensors, several studies have used them to track and analyze mental well-being, productivity, and behavioral patterns. However, there is still a lack of open datasets collected in real-world contexts with affective and cognitive state labels such as emotion, stress, and attention; the lack of such datasets limits research advances in affective computing and human-computer interaction. This study presents K-EmoPhone, a real-world multimodal dataset collected from 77 students over seven days. This dataset contains (1) continuous probing of peripheral physiological signals and mobility data measured by commercial off-the-shelf devices, (2) context and interaction data collected from individualsâ€™ smartphones, and (3) 5,582 self-reported affect states, including emotions, stress, attention, and task disturbance, acquired by the experience sampling method. We anticipate the dataset will contribute to advancements in affective computing, emotion intelligence technologies, and attention management based on mobile and wearable sensor data.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/Projects/p4clab.github.io/posts/publications/K-EmoPhone A Mobile and Wearable Dataset with In-Situ Emotion, Stress, and Attention Labels.md\";\nimport React from 'react';\nimport Layout from \"./layout\";\nimport Seo from \"./seo\";\nimport {A, H4, Span} from \"./typography\";\nimport MdxTemplate from \"./mdx-template\";\nconst PublicationTemplate = _ref => {\n  let {data, children} = _ref;\n  const {publication} = data;\n  const {title, date, type, authors, publisher, abbrev, volume, issue, pages, doi} = (publication === null || publication === void 0 ? void 0 : publication.frontmatter) || ({});\n  const pubAbbrev = publisher && abbrev ? `${publisher} (${abbrev})` : publisher;\n  const volIssue = volume && issue ? `${volume} (${issue})` : volume;\n  const pubLine = [pubAbbrev, volIssue, pages].filter(p => p !== undefined && p !== null).join(', ');\n  return React.createElement(Layout, {\n    activeLink: \"publications\"\n  }, React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"flex flex-col items-start space-y-2 text-base font-serif\"\n  }, React.createElement(Span, {\n    className: \"leading-none text-gray-400 dark:text-gray-500\"\n  }, date || ''), React.createElement(H4, {\n    className: \"capitalize font-sans\"\n  }, \"[\", type, \"] \", title), authors && React.createElement(Span, {\n    className: \"leading-1\"\n  }, authors.join(', '), \" \"), publisher && React.createElement(Span, {\n    className: \"italic\"\n  }, pubLine), doi && React.createElement(A, {\n    href: `https://doi.org/${doi}`\n  }, \"DOI: \", doi)), React.createElement(\"hr\", {\n    className: \"my-6\"\n  }), React.createElement(MdxTemplate, null, children)));\n};\nconst pageQuery = \"433653831\";\nexport const Head = _ref2 => {\n  var _data$publication, _data$publication$fro;\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: `Publication - ${(_data$publication = data.publication) === null || _data$publication === void 0 ? void 0 : (_data$publication$fro = _data$publication.frontmatter) === null || _data$publication$fro === void 0 ? void 0 : _data$publication$fro.title}`\n  });\n};\nPublicationTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PublicationTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react'\r\nimport {MDXProvider} from \"@mdx-js/react\";\r\nimport {A, H4, H5, H6, P} from \"./typography\";\r\n\r\nconst MdxTemplate = ({children} : {children: React.ReactNode})  => {\r\n    const component = {\r\n        h1: (props: object) => <H4 className='mt-12 mb-1 first:mt-0' {...props}/>,\r\n        h2: (props: object) => <H5 className='mt-4 mb-1' {...props}/>,\r\n        h3: (props: object) => <H6 className='mt-2 mb-1' {...props}/>,\r\n        p: (props: object) => <P className='mt-0 mb-2' {...props}/>,\r\n        ul: (props: object) => <ul className='my-0 list-outside list-disc text-md text-gray-500 font-serif dark:text-gray-400' {...props}/>,\r\n        ol: (props: object) => <ol className='my-0 list-outside list-decimal text-md text-gray-500 font-serif dark:text-gray-400' {...props}/>,\r\n        li: (props: object) => <li className='my-0' {...props}/>,\r\n        a: (props: object) => <A {...props}/>,\r\n        pre: (props: object) => <pre className='p-0' {...props}/>,\r\n        table: (props: object) => <table className='font-medium text-md font-serif' {...props}/>\r\n    }\r\n\r\n    return (\r\n        <article className='max-w-full dark:format-invert format'>\r\n            <MDXProvider components={component}>{children}</MDXProvider>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default MdxTemplate","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","span","p","_provideComponents","components","React","id","tabIndex","href","className","wrapper","MDXLayout","PublicationTemplate","_ref","data","children","publication","title","date","type","authors","publisher","abbrev","volume","issue","pages","doi","frontmatter","pubLine","filter","join","Layout","activeLink","Span","H4","A","MdxTemplate","Head","_ref2","_data$publication","_data$publication$fro","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","component","h2","H5","h3","H6","P","ul","ol","li","pre","table","MDXProvider","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}